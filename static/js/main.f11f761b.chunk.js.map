{"version":3,"sources":["store/actions/actionTypes.js","store/actions/auth.js","store/actions/stocks.js","components/Register.js","components/Login.js","components/AuthRedirect.js","components/Home.js","components/Search.js","components/Stocks.js","components/Symbol.js","components/Transactions.js","components/Portfolio.js","components/AuthShow.js","components/AuthHide.js","components/Nav.js","components/ScrollToTop.js","App.js","store/reducers/auth.js","store/reducers/stocks.js","index.js","components/Nav.module.css","components/Home.module.css"],"names":["AUTHORIZE","DEAUTHORIZE","LOADING_FINISH","LOAD_STOCKS","UPDATE_QUANTITY","LOAD_TRANSACTIONS","NEW_TRANSACTION","SET_CASH","SET_ERROR_MESSAGE","ADD_STOCK","ADD_NEW_ID","authorize","type","actionTypes","deauthorize","setCash","cash","setErrorMessage","message","success","fetchStocks","dispatch","jwtToken","localStorage","getItem","axios","get","headers","Authorization","then","response","stocks","data","catch","error","actions","updateQuantity","symbol","value","sell","max","buyStock","stock","quantity","index","post","companyName","prices","_id","transaction","newId","setItem","fetchTransactions","transactions","connect","onPostRegister","registerForm","history","token","expires","Date","now","Number","expiresIn","push","onSetErrorMessage","props","useEffect","useState","username","password","confirmPassword","setRegisterForm","useHistory","handleInput","e","registerFormCopy","target","name","className","onSubmit","preventDefault","htmlFor","id","onChange","required","minLength","aria-label","onPostLogin","loginForm","setLoginForm","loginFormCopy","state","isAuth","auth","isLoading","Fragment","children","to","classes","Home","onFetchStocks","onUpdateQuantity","onBuyStock","onAddStock","length","search","setSearch","searchIndex","findIndex","toUpperCase","result","buyQuantity","maxLength","getAttribute","price","totalPrice","console","log","displayStocks","map","change","toFixed","data-symbol","onClick","min","useParams","filter","el","displayStock","date","toLocaleDateString","labels","datasets","fill","pointBackgroundColor","borderColor","lineTension","options","legend","display","scales","xAxes","gridLines","isTransactionsLoaded","isStocksLoaded","onFetchTransactions","displayTransactions","Math","abs","reverse","owned","sellStock","ownedQuantity","sellQuantity","totalValue","displayOwned","key","errorMessage","onDeauthorize","Nav","top","removeItem","bottom","ScrollToTop","pathname","useLocation","window","scrollTo","onAuthorize","onLoadingFinish","onSetCash","expiration","isLoggedIn","path","exact","href","initialState","action","loadingFinish","reducer","loadStocks","stocksCopy","createOwned","loadTransactions","newTransaction","addStock","addNewId","stocksReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f11f761b.chunk.js","sourcesContent":["export const AUTHORIZE = \"AUTHORIZE\";\nexport const DEAUTHORIZE = \"DEAUTHORIZE\";\nexport const LOADING_FINISH = \"LOADING_FINISH\";\n\nexport const LOAD_STOCKS = \"LOAD_STOCKS\";\nexport const UPDATE_QUANTITY = \"UPDATE_QUANTITY\";\n\nexport const LOAD_TRANSACTIONS = \"LOAD_TRANSACTIONS\"\nexport const NEW_TRANSACTION = \"NEW_TRANSACTION\";\n\nexport const SET_CASH = \"SET_CASH\";\nexport const SET_ERROR_MESSAGE = \"SET_ERROR_MESSAGE\"\n\nexport const ADD_STOCK = \"ADD_STOCK\";\nexport const ADD_NEW_ID = \"ADD_NEW_ID\";\n\n","import * as actionTypes from \"../actions/actionTypes\";\nimport axios from \"axios\";\n\n// Authorize user\nexport const authorize = () => {\n  return {\n    type: actionTypes.AUTHORIZE,\n  };\n};\n\n// Deauthorize user\nexport const deauthorize = () => {\n  return {\n    type: actionTypes.DEAUTHORIZE,\n  };\n};\n\n// Stop loading\nexport const loadingFinish = () => {\n  return {\n    type: actionTypes.LOADING_FINISH,\n  };\n};\n\nexport const setCash = (cash) => {\n  return {\n    type: actionTypes.SET_CASH,\n    cash,\n  };\n};\n\nexport const setErrorMessage = (message, success) => {\n  return {\n    type: actionTypes.SET_ERROR_MESSAGE,\n    message,\n    success,\n  };\n};\n\n// Handle login submission to backend\nexport const postLogin = (loginForm, history) => {\n  return (dispatch) => {\n    axios\n      .post(\"https://stocks-308723.ts.r.appspot.com/login\", {\n        ...loginForm,\n      })\n      .then((response) => {\n        // Store jwt token and when it expires in local storage\n        localStorage.setItem(\"jwtToken\", response.data.token);\n        const expires = Date.now() + Number(response.data.expiresIn);\n        localStorage.setItem(\"jwtExpires\", expires);\n\n        // Redirect to home page\n        history.push(\"/\");\n\n        // Login user with redux state auth\n        dispatch(authorize());\n\n        // Save users cash\n        localStorage.setItem(\"cash\", response.data.cash);\n        dispatch(setCash(response.data.cash));\n\n        dispatch(setErrorMessage(\"Logged In\", \"success\"));\n      })\n      .catch((error) => {\n        if (error.response) {\n          dispatch(setErrorMessage(error.response.data.message));\n        } else {\n          dispatch(setErrorMessage(\"Something went wrong\"));\n        }\n      });\n  };\n};\n\n// Handle register user on the backend\nexport const postRegister = (registerForm, history) => {\n  return (dispatch) => {\n    axios\n      .post(\"https://stocks-308723.ts.r.appspot.com/register\", {\n        ...registerForm,\n      })\n      .then((response) => {\n        // Store jwt token and when it expires in local storage\n        localStorage.setItem(\"jwtToken\", response.data.token);\n        const expires = Date.now() + Number(response.data.expiresIn);\n        localStorage.setItem(\"jwtExpires\", expires);\n\n        // Redirect to home page\n        history.push(\"/\");\n\n        // Login user with redux state auth\n        dispatch(authorize());\n\n        // Save users cash\n        localStorage.setItem(\"cash\", response.data.cash);\n        dispatch(setCash(response.data.cash));\n\n        dispatch(setErrorMessage(\"Registered\", \"success\"));\n      })\n      .catch((error) => {\n        if (error.response) {\n          dispatch(setErrorMessage(error.response.data.message));\n        } else {\n          dispatch(setErrorMessage(\"Something went wrong\"));\n        }\n      });\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\nimport * as actions from \"./index\";\nimport axios from \"axios\";\n\n// Authorize user\nexport const loadStocks = (stocks) => {\n  return {\n    type: actionTypes.LOAD_STOCKS,\n    stocks,\n  };\n};\n\n// Fetch stocks from database\nexport const fetchStocks = () => {\n  return (dispatch) => {\n    const jwtToken = localStorage.getItem(\"jwtToken\");\n    axios\n      .get(\"https://stocks-308723.ts.r.appspot.com/stocks\", {\n        headers: {\n          Authorization: `Bearer ${jwtToken}`,\n        },\n      })\n      .then((response) => {\n        dispatch(loadStocks(response.data.stocks));\n      })\n      .catch((error) => {\n        if (error.response) {\n          dispatch(actions.setErrorMessage(error.response.data.message));\n        } else {\n          dispatch(actions.setErrorMessage(\"Something went wrong\"));\n        }\n      });\n  };\n};\n\n// Change quantity to buy based on user input\nexport const updateQuantity = (symbol, value, sell, max) => {\n  return {\n    type: actionTypes.UPDATE_QUANTITY,\n    symbol,\n    value,\n    sell,\n    max,\n  };\n};\n\nexport const newTransaction = (transaction) => {\n  return {\n    type: actionTypes.NEW_TRANSACTION,\n    transaction,\n  };\n};\n\nexport const addNewId = (_id, symbol) => {\n  return {\n    type: actionTypes.ADD_NEW_ID,\n    _id,\n    symbol,\n  };\n};\n\n// Buy a stock on the backend\nexport const buyStock = (stock, quantity, index) => {\n  return (dispatch) => {\n    const jwtToken = localStorage.getItem(\"jwtToken\");\n    if (quantity === \"\") {\n      quantity = 0;\n    }\n    axios\n      .post(\n        \"https://stocks-308723.ts.r.appspot.com/stocks/buy\",\n        {\n          stock: {\n            symbol: stock.symbol,\n            companyName: stock.companyName,\n            prices: stock.prices,\n          },\n          quantity,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${jwtToken}`,\n          },\n        }\n      )\n      .then((response) => {\n        // Add id if result was from stock api search\n        dispatch(addNewId(response.data.newId, stock.symbol));\n\n        // Save updated cash value\n        dispatch(actions.setCash(response.data.cash));\n        localStorage.setItem(\"cash\", response.data.cash);\n\n        // Push to transactions state\n        dispatch(actions.newTransaction(response.data.transaction));\n      })\n      .catch((error) => {\n        if (error.response) {\n          dispatch(actions.setErrorMessage(error.response.data.message));\n        } else {\n          dispatch(actions.setErrorMessage(\"Something went wrong\"));\n        }\n      });\n  };\n};\n\nexport const loadTransactions = (transactions) => {\n  return {\n    type: actionTypes.LOAD_TRANSACTIONS,\n    transactions,\n  };\n};\n\n// Fetch stocks from database\nexport const fetchTransactions = () => {\n  return (dispatch) => {\n    const jwtToken = localStorage.getItem(\"jwtToken\");\n    axios\n      .get(\"https://stocks-308723.ts.r.appspot.com/stocks/transactions\", {\n        headers: {\n          Authorization: `Bearer ${jwtToken}`,\n        },\n      })\n      .then((response) => {\n        dispatch(loadTransactions(response.data.transactions));\n      })\n      .catch((error) => {\n        if (error.response) {\n          dispatch(actions.setErrorMessage(error.response.data.message));\n        } else {\n          dispatch(actions.setErrorMessage(\"Something went wrong\"));\n        }\n      });\n  };\n};\n\n// Add new stock to state from search results\nexport const addStock = (stock) => {\n  return {\n    type: actionTypes.ADD_STOCK,\n    stock,\n  };\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\n\nconst Register = (props) => {\n  useEffect(() => {\n    // Reset error message on page load\n    props.onSetErrorMessage(\"\");\n\n    // eslint-disable-next-line\n  }, []);\n\n  const [registerForm, setRegisterForm] = useState({\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  let history = useHistory();\n\n  // Change register details when inputs change\n  const handleInput = (e) => {\n    const registerFormCopy = {\n      ...registerForm,\n      [e.target.name]: e.target.value,\n    };\n    setRegisterForm(registerFormCopy);\n    props.onSetErrorMessage(\"\");\n  };\n\n  // Submit register form handler\n  const handleSubmission = (e) => {\n    e.preventDefault();\n\n    // Submit to backend\n    props.onPostRegister(registerForm, history);\n  };\n\n  return (\n    <div className=\"w-600 h-center\">\n      <h1 className=\"page-title\">Register</h1>\n      <form className=\"form\" onSubmit={handleSubmission}>\n        <div>\n          <label htmlFor=\"username\">Username</label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            value={registerForm.username}\n            onChange={handleInput}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={registerForm.password}\n            onChange={handleInput}\n            required\n            minLength=\"8\"\n          />\n        </div>\n        <div>\n          <label htmlFor=\"confirmPassword\">Confirm Password</label>\n          <input\n            type=\"password\"\n            id=\"confirmPassword\"\n            name=\"confirmPassword\"\n            value={registerForm.confirmPassword}\n            onChange={handleInput}\n            required\n            minLength=\"8\"\n          />\n        </div>\n        <button className=\"h-center\" type=\"submit\" aria-label=\"submit\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onPostRegister: (registerForm, history) => {\n      dispatch(actions.postRegister(registerForm, history));\n    },\n    onSetErrorMessage: (message) => {\n      dispatch(actions.setErrorMessage(message));\n    },\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Register);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Login = (props) => {\n  useEffect(() => {\n    // Reset error message on page load\n    props.onSetErrorMessage(\"\");\n\n    // eslint-disable-next-line\n  }, []);\n\n  const [loginForm, setLoginForm] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  // Change register details when inputs change\n  const handleInput = (e) => {\n    const loginFormCopy = {\n      ...loginForm,\n      [e.target.name]: e.target.value,\n    };\n    setLoginForm(loginFormCopy);\n    props.onSetErrorMessage(\"\");\n  };\n\n  let history = useHistory();\n\n  // Submit register form handler\n  const handleSubmission = (e) => {\n    e.preventDefault();\n\n    // Submit to backend\n    props.onPostLogin(loginForm, history);\n  };\n\n  return (\n    <div className=\"w-600 h-center\">\n      <h1 className=\"page-title\">Login</h1>\n      <form className=\"form\" onSubmit={handleSubmission}>\n        <div>\n          <label htmlFor=\"username\">Username</label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            value={loginForm.username}\n            onChange={handleInput}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={loginForm.password}\n            onChange={handleInput}\n            required\n            minLength=\"8\"\n          />\n        </div>\n        <button className=\"h-center\" type=\"submit\" aria-label=\"submit\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onPostLogin: (loginForm, history) => {\n      dispatch(actions.postLogin(loginForm, history));\n    },\n    onSetErrorMessage: (message) => {\n      dispatch(actions.setErrorMessage(message));\n    },\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst AuthRedirect = (props) => {\n  let display;\n  if (props.isAuth) {\n    display = <React.Fragment>{props.children}</React.Fragment>;\n  } else if (props.isLoading) {\n    display = <h1>Loading...</h1>;\n  } else {\n    display = <Redirect to=\"/login\" />;\n  }\n  return display;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.auth.isAuth,\n    isLoading: state.auth.isLoading,\n  };\n};\n\nexport default connect(mapStateToProps)(AuthRedirect);\n","import classes from \"./Home.module.css\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\n\nconst Home = (props) => {\n  useEffect(() => {\n    // Reset error message on page load\n    props.onSetErrorMessage(\"\");\n\n    // eslint-disable-next-line\n  }, []);\n  return (\n    <div className={classes.Home}>\n      <h1>Stock Trader</h1>\n      <p>A site to practice trading stocks</p>\n      <p>With risk free simulated trades and portfolios</p>\n      <p>Uses real data which is updated daily</p>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSetErrorMessage: (message) => {\n      dispatch(actions.setErrorMessage(message));\n    },\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Home);\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\n\nconst Search = (props) => {\n  useEffect(() => {\n    // If hasn't been run before fetch stocks from database\n    if (!props.stocks.length) {\n      props.onFetchStocks();\n    }\n\n    // Reset error message on page load\n    props.onSetErrorMessage(\"\");\n\n    // eslint-disable-next-line\n  }, []);\n\n  const [search, setSearch] = useState(\"\");\n\n  // Update search term with users input\n  const handleInput = (e) => {\n    setSearch(e.target.value);\n    props.onSetErrorMessage(\"\");\n  };\n\n  let history = useHistory();\n\n  // Handle submission of search form\n  const handleSubmission = (e) => {\n    e.preventDefault();\n\n    // Check state for search term first\n    const searchIndex = props.stocks.findIndex((stock) => {\n      return stock.symbol === search.toUpperCase();\n    });\n\n    // If found in state display results from it\n    if (searchIndex !== -1) {\n      props.onSetErrorMessage(\"\");\n\n      // Redirect to symbol page\n      history.push(`/stocks/${props.stocks[searchIndex].symbol}`);\n    } else {\n      // If not found in state check database and stock api\n      const jwtToken = localStorage.getItem(\"jwtToken\");\n      axios\n        .post(\n          `https://stocks-308723.ts.r.appspot.com/search`,\n          { symbol: search },\n          {\n            headers: {\n              Authorization: `Bearer ${jwtToken}`,\n            },\n          }\n        )\n        .then((response) => {\n          const result = response.data;\n\n          // Add stock to state\n          props.onAddStock({\n            symbol: result.symbol,\n            companyName: result.companyName,\n            prices: result.prices,\n            buyQuantity: 0,\n          });\n\n          // Redirect to symbol page\n          history.push(`/stocks/${result.symbol}`);\n        })\n        .catch((error) => {\n          if (error.response) {\n            props.onSetErrorMessage(error.response.data.message);\n          } else {\n            props.onSetErrorMessage(\"Something went wrong\");\n          }\n        });\n    }\n  };\n\n  return (\n    <div className=\"h-center w-600\">\n      <h1 className=\"page-title\">Search</h1>\n      <form className=\"form\" onSubmit={handleSubmission}>\n        <div>\n          <label htmlFor=\"search\">Symbol</label>\n          <input\n            type=\"text\"\n            id=\"search\"\n            name=\"search\"\n            value={search}\n            onChange={handleInput}\n            required\n            maxLength=\"6\"\n          />\n        </div>\n        <button className=\"h-center\" type=\"submit\">\n          Search\n        </button>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    stocks: state.stocks.stocks,\n    cash: state.auth.cash,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchStocks: () => {\n      dispatch(actions.fetchStocks());\n    },\n    onUpdateQuantity: (symbol, value) => {\n      dispatch(actions.updateQuantity(symbol, value));\n    },\n    onBuyStock: (stock, quantity, index) => {\n      dispatch(actions.buyStock(stock, quantity, index));\n    },\n    onAddStock: (stock) => {\n      dispatch(actions.addStock(stock));\n    },\n    onSetErrorMessage: (message) => {\n      dispatch(actions.setErrorMessage(message));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\n\nconst Stocks = (props) => {\n  useEffect(() => {\n    // If hasn't been run before fetch stocks from database\n    if (!props.stocks.length) {\n      props.onFetchStocks();\n    } else {\n      // Reset buy quantity for all stocks\n      for (let stock of props.stocks) {\n        props.onUpdateQuantity(stock.symbol, \"\");\n      }\n    }\n\n    // Reset error message on page load\n    props.onSetErrorMessage(\"\");\n\n    // eslint-disable-next-line\n  }, []);\n\n  // Buy a stock\n  const buyStock = (e) => {\n    e.preventDefault();\n    const symbol = e.target.getAttribute(\"data-symbol\");\n\n    // Find index of stock being bought\n    const index = props.stocks.findIndex((stock) => stock.symbol === symbol);\n\n    // Check if user can afford to buy the quantity entered\n    const price =\n      props.stocks[index].prices[props.stocks[index].prices.length - 1];\n    const quantity = props.stocks[index].buyQuantity;\n    const totalPrice = price * quantity;\n    console.log(totalPrice);\n    if (totalPrice !== 0 && totalPrice < props.cash) {\n      props.onBuyStock(props.stocks[index], quantity, index);\n      props.onUpdateQuantity(symbol, 0);\n      props.onSetErrorMessage(`Bought ${quantity} ${symbol}`, \"success\");\n    } else {\n      if (totalPrice > props.cash) {\n        props.onSetErrorMessage(\"Cannot Afford\");\n      } else if (quantity === \"\") {\n        props.onSetErrorMessage(\"Please Enter a Number\");\n      }\n    }\n  };\n\n  const displayStocks = props.stocks.map((stock) => {\n    // Percentage change since yesterday\n    const change =\n      ((stock.prices[stock.prices.length - 1] -\n        stock.prices[stock.prices.length - 2]) /\n        stock.prices[stock.prices.length - 2]) *\n      100;\n    return (\n      <tr key={stock.symbol}>\n        <td>\n          <Link to={`/stocks/${stock.symbol}`}>{stock.symbol}</Link>\n        </td>\n        <td>\n          <Link to={`/stocks/${stock.symbol}`}>{stock.companyName}</Link>\n        </td>\n        <td\n          className={\n            change > 0\n              ? \"r-align positive\"\n              : change < 0\n              ? \"r-align negative\"\n              : \"r-align\"\n          }\n        >\n          {stock.prices.length > 1 ? change.toFixed(2) + \"%\" : \"-\"}\n        </td>\n        <td className=\"r-align\">\n          {stock.prices[stock.prices.length - 1].toFixed(2)}\n        </td>\n        <td>\n          <form\n            className=\"transaction-form\"\n            onSubmit={buyStock}\n            data-symbol={stock.symbol}\n          >\n            <div>\n              <button\n                type=\"button\"\n                aria-label=\"subtract 1\"\n                onClick={() => {\n                  props.onSetErrorMessage(\"\");\n                  props.onUpdateQuantity(stock.symbol, stock.buyQuantity - 1);\n                }}\n              >\n                -\n              </button>\n              <input\n                type=\"number\"\n                id=\"quantity\"\n                name=\"quantity\"\n                aria-label=\"quantity\"\n                value={stock.buyQuantity}\n                min=\"0\"\n                onChange={(e) => {\n                  props.onSetErrorMessage(\"\");\n                  props.onUpdateQuantity(stock.symbol, e.target.value);\n                }}\n              />\n              <button\n                type=\"button\"\n                aria-label=\"add 1\"\n                onClick={() => {\n                  props.onSetErrorMessage(\"\");\n                  props.onUpdateQuantity(stock.symbol, stock.buyQuantity + 1);\n                }}\n              >\n                +\n              </button>\n            </div>\n            <button type=\"submit\">Buy</button>\n          </form>\n        </td>\n      </tr>\n    );\n  });\n\n  return (\n    <div>\n      <h1 className=\"page-title\">Stocks</h1>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>Symbol</th>\n            <th>Company</th>\n            <th>Change</th>\n            <th>Price</th>\n            <th>Buy</th>\n          </tr>\n        </thead>\n        <tbody>{displayStocks}</tbody>\n      </table>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    stocks: state.stocks.stocks,\n    cash: state.auth.cash,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchStocks: () => {\n      dispatch(actions.fetchStocks());\n    },\n    onUpdateQuantity: (symbol, value) => {\n      dispatch(actions.updateQuantity(symbol, value));\n    },\n    onBuyStock: (stock, quantity, index) => {\n      dispatch(actions.buyStock(stock, quantity, index));\n    },\n    onSetErrorMessage: (message, success) => {\n      dispatch(actions.setErrorMessage(message, success));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Stocks);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useParams, Redirect } from \"react-router-dom\";\nimport * as actions from \"../store/actions/index\";\nimport { Line } from \"react-chartjs-2\";\n\nconst Symbol = (props) => {\n  // If hasn't been run before\n  useEffect(() => {\n    if (!props.stocks.length) {\n      props.onFetchStocks();\n    } else {\n      // Reset buy quantity for all stocks\n      for (let stock of props.stocks) {\n        props.onUpdateQuantity(stock.symbol, \"\");\n      }\n    }\n    // Reset error message on page load\n    props.onSetErrorMessage(\"\");\n\n    // eslint-disable-next-line\n  }, []);\n\n  // Buy a stock\n  const buyStock = (e) => {\n    e.preventDefault();\n    const symbol = e.target.getAttribute(\"data-symbol\");\n\n    // Find index of stock being bought\n    const index = props.stocks.findIndex((stock) => stock.symbol === symbol);\n\n    // Check if user can afford to buy the quantity entered\n    const price =\n      props.stocks[index].prices[props.stocks[index].prices.length - 1];\n    const quantity = props.stocks[index].buyQuantity;\n    const totalPrice = price * quantity;\n\n    if (quantity !== \"\" && totalPrice < props.cash) {\n      props.onBuyStock(props.stocks[index], quantity, index);\n      props.onUpdateQuantity(symbol, \"\");\n      props.onSetErrorMessage(`Bought ${quantity} ${symbol}`, \"success\");\n    } else {\n      if (totalPrice > props.cash) {\n        props.onSetErrorMessage(\"Cannot Afford\");\n      } else if (quantity === \"\") {\n        props.onSetErrorMessage(\"Please Enter a Number\");\n      }\n    }\n  };\n\n  // Find stock with with symbol in url\n  const { symbol } = useParams();\n  const stock = props.stocks.filter((el) => {\n    return el.symbol === symbol.toUpperCase();\n  });\n\n  let displayStock = [];\n  if (stock.length) {\n    displayStock = stock.map((el) => {\n      return (\n        <React.Fragment key={el.symbol}>\n          <h1 className=\"page-title\">{el.symbol}</h1>\n          <p className=\"company-name\">Company: {el.companyName}</p>\n          <h2 className=\"price-history h-center\">Price history</h2>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                {el.prices.map((price, index) => {\n                  const date = new Date(\n                    Date.now() -\n                      (el.prices.length - 1 - index) * 1000 * 60 * 60 * 24\n                  );\n                  return <th key={index}>{date.toLocaleDateString()}</th>;\n                })}\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                {el.prices.map((price, index) => {\n                  return (\n                    <td className=\"r-align\" key={index}>\n                      {price}\n                    </td>\n                  );\n                })}\n              </tr>\n            </tbody>\n          </table>\n          {el.prices.length > 1 ? (\n            <Line\n              data={{\n                type: \"Line\",\n                labels: el.prices.map((price, index) => {\n                  const date = new Date(\n                    Date.now() -\n                      (el.prices.length - 1 - index) * 1000 * 60 * 60 * 24\n                  );\n\n                  return date.toLocaleDateString();\n                }),\n                datasets: [\n                  {\n                    fill: false,\n                    pointBackgroundColor: \"rgb(90, 90, 255)\",\n                    borderColor: \"rgb(90, 90, 255)\",\n                    lineTension: 0,\n                    data: el.prices.map((price, index) => {\n                      return price;\n                    }),\n                  },\n                ],\n              }}\n              options={{\n                legend: {\n                  display: false,\n                },\n                scales: {\n                  xAxes: [\n                    {\n                      gridLines: {\n                        display: false,\n                      },\n                    },\n                  ],\n                },\n              }}\n            />\n          ) : null}\n\n          <form\n            className=\"transaction-form\"\n            onSubmit={buyStock}\n            data-symbol={el.symbol}\n          >\n            <div>\n              <button\n                type=\"button\"\n                aria-label=\"subtract 1\"\n                onClick={() => {\n                  props.onSetErrorMessage(\"\");\n                  props.onUpdateQuantity(el.symbol, el.buyQuantity - 1);\n                }}\n              >\n                -\n              </button>\n              <input\n                type=\"number\"\n                id=\"quantity\"\n                name=\"quantity\"\n                aria-label=\"quantity\"\n                value={el.buyQuantity}\n                min=\"0\"\n                onChange={(e) => {\n                  props.onSetErrorMessage(\"\");\n                  props.onUpdateQuantity(el.symbol, e.target.value);\n                }}\n              />\n              <button\n                type=\"button\"\n                aria-label=\"add 1\"\n                onClick={() => {\n                  props.onSetErrorMessage(\"\");\n                  props.onUpdateQuantity(el.symbol, el.buyQuantity + 1);\n                }}\n              >\n                +\n              </button>\n            </div>\n            <button type=\"submit\">Buy</button>\n          </form>\n        </React.Fragment>\n      );\n    });\n  }\n\n  // Redirect if stock doesn't exist in state\n  if (!displayStock.length && props.stocks.length) {\n    displayStock = <Redirect to=\"/stocks\"></Redirect>;\n  }\n\n  return <div className=\"w-600 h-center flex-column\">{displayStock}</div>;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    stocks: state.stocks.stocks,\n    cash: state.auth.cash,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchStocks: () => {\n      dispatch(actions.fetchStocks());\n    },\n    onUpdateQuantity: (symbol, value) => {\n      dispatch(actions.updateQuantity(symbol, value));\n    },\n    onBuyStock: (stock, quantity, index) => {\n      dispatch(actions.buyStock(stock, quantity, index));\n    },\n    onSetErrorMessage: (message, success) => {\n      dispatch(actions.setErrorMessage(message, success));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Symbol);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport * as actions from \"../store/actions/index\";\n\nconst Transactions = (props) => {\n  useEffect(() => {\n    // Load stocks and transactions if not defined\n    if (!props.isStocksLoaded) {\n      props.onFetchStocks();\n    }\n\n    // Reset error message on page load\n    props.onSetErrorMessage(\"\");\n\n    // eslint-disable-next-line\n  }, []);\n\n  // Load transactions if stocks already defined\n  if (props.isStocksLoaded && !props.isTransactionsLoaded) {\n    props.onFetchTransactions();\n  }\n\n  const displayTransactions = props.transactions.map((transaction) => {\n    const stock = props.stocks.filter((el) => {\n      return transaction.stock === el._id;\n    })[0];\n    return (\n      <tr key={transaction._id}>\n        <td>\n          <Link to={`/stocks/${stock.symbol}`}>{stock.symbol}</Link>\n        </td>\n        <td>\n          <Link to={`/stocks/${stock.symbol}`}>{stock.companyName}</Link>\n        </td>\n        <td>{new Date(transaction.date).toLocaleDateString()}</td>\n        <td className=\"r-align\">{transaction.quantity}</td>\n        <td className=\"r-align\">{transaction.price.toFixed(2)}</td>\n        <td className=\"r-align\">\n          {Math.abs(transaction.quantity * transaction.price).toFixed(2)}\n        </td>\n      </tr>\n    );\n  });\n  return (\n    <div>\n      <h1 className=\"page-title\">Your Transactions</h1>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>Symbol</th>\n            <th>Company</th>\n            <th>Date</th>\n            <th>Quantity</th>\n            <th>Price</th>\n            <th>Total</th>\n          </tr>\n        </thead>\n        <tbody>{displayTransactions.reverse()}</tbody>\n      </table>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    stocks: state.stocks.stocks,\n    transactions: state.stocks.transactions,\n    isTransactionsLoaded: state.stocks.isTransactionsLoaded,\n    isStocksLoaded: state.stocks.isStocksLoaded,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchStocks: () => {\n      dispatch(actions.fetchStocks());\n    },\n    onFetchTransactions: () => {\n      dispatch(actions.fetchTransactions());\n    },\n    onSetErrorMessage: (message) => {\n      dispatch(actions.setErrorMessage(message));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Transactions);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport * as actions from \"../store/actions/index\";\n\nconst Portfolio = (props) => {\n  useEffect(() => {\n    if (!props.isStocksLoaded) {\n      props.onFetchStocks();\n    } else {\n      // Reset buy quantity for all stocks\n      for (let stock of props.stocks) {\n        props.onUpdateQuantity(stock.symbol, \"\");\n        props.onUpdateQuantity(stock.symbol, \"\", \"sell\");\n      }\n    }\n\n    props.onSetErrorMessage(\"\");\n    // eslint-disable-next-line\n  }, []);\n\n    // Load transactions if stocks already defined\n    if (props.isStocksLoaded && !props.isTransactionsLoaded) {\n      props.onFetchTransactions();\n    }\n\n  const buyStock = (e) => {\n    e.preventDefault();\n    const symbol = e.target.getAttribute(\"data-symbol\");\n\n    // Find index of stock being bought\n    const index = props.stocks.findIndex((stock) => stock.symbol === symbol);\n\n    // Check if user can afford to buy the quantity entered\n    const price =\n      props.stocks[index].prices[props.stocks[index].prices.length - 1];\n    const quantity = props.stocks[index].buyQuantity;\n    const totalPrice = price * quantity;\n    if (quantity !== \"\" && totalPrice < props.cash) {\n      props.onBuyStock(props.stocks[index], quantity, index);\n      props.onUpdateQuantity(symbol, 0);\n      props.onSetErrorMessage(`Bought ${quantity} ${symbol}`, \"success\");\n    } else {\n      if (totalPrice > props.cash) {\n        props.onSetErrorMessage(\"Cannot Afford\");\n      } else if (quantity === \"\") {\n        props.onSetErrorMessage(\"Please Enter a Number\");\n      }\n    }\n  };\n\n  const sellStock = (e) => {\n    e.preventDefault();\n    const symbol = e.target.getAttribute(\"data-symbol\");\n\n    // Find index of stock being bought\n    const index = props.stocks.findIndex((stock) => stock.symbol === symbol);\n\n    // Check that the user has the stock quantity to sell\n    const ownedQuantity = props.owned[symbol].quantity;\n    const quantity = props.stocks[index].sellQuantity;\n    if (quantity !== \"\" && quantity <= ownedQuantity) {\n      props.onBuyStock(props.stocks[index], -quantity, index);\n      props.onUpdateQuantity(symbol, 0, \"sell\");\n      props.onSetErrorMessage(`Sold ${quantity} ${symbol}`, \"success\");\n    } else {\n      if (quantity === \"\") {\n        props.onSetErrorMessage(\"Please Enter a Number\");\n      } else if (quantity > ownedQuantity) {\n        props.onSetErrorMessage(\"You Do Not Own That Many Shares\");\n      }\n    }\n  };\n\n  let totalValue = 0;\n  const displayOwned = [];\n  for (let key in props.owned) {\n    // Use stock from props.stocks to use buy quantity\n    const stock = props.stocks.filter((stock) => key === stock.symbol)[0];\n\n    // Percentage change since yesterday\n    const change =\n      ((stock.prices[stock.prices.length - 1] -\n        stock.prices[stock.prices.length - 2]) /\n        stock.prices[stock.prices.length - 2]) *\n      100;\n    displayOwned.push(\n      <tr key={key}>\n        <td>\n          <Link to={`/stocks/${key}`}>{key}</Link>\n        </td>\n        <td>\n          <Link to={`/stocks/${key}`}>{stock.companyName}</Link>\n        </td>\n        <td\n          className={\n            change > 0\n              ? \"r-align positive\"\n              : change < 0\n              ? \"r-align negative\"\n              : \"r-align\"\n          }\n        >\n          {stock.prices.length > 1 ? change.toFixed(2) + \"%\" : \"-\"}\n        </td>\n        <td className=\"r-align\">{props.owned[key].quantity}</td>\n        <td className=\"r-align\">\n          {stock.prices[stock.prices.length - 1].toFixed(2)}\n        </td>\n        <td className=\"r-align\">\n          {(\n            stock.prices[stock.prices.length - 1] * props.owned[key].quantity\n          ).toFixed(2)}\n        </td>\n        <td>\n          <form\n            className=\"transaction-form\"\n            onSubmit={buyStock}\n            data-symbol={stock.symbol}\n          >\n            <div>\n              <button\n                type=\"button\"\n                aria-label=\"subtract 1\"\n                onClick={() => {\n                  props.onSetErrorMessage(\"\");\n                  props.onUpdateQuantity(stock.symbol, stock.buyQuantity - 1);\n                }}\n              >\n                -\n              </button>\n              <input\n                type=\"number\"\n                id=\"quantity\"\n                name=\"quantity\"\n                aria-label=\"quantity\"\n                value={stock.buyQuantity}\n                min=\"0\"\n                onChange={(e) => {\n                  props.onSetErrorMessage(\"\");\n                  props.onUpdateQuantity(stock.symbol, e.target.value);\n                }}\n              />\n              <button\n                type=\"button\"\n                aria-label=\"add 1\"\n                onClick={() => {\n                  props.onSetErrorMessage(\"\");\n                  props.onUpdateQuantity(stock.symbol, stock.buyQuantity + 1);\n                }}\n              >\n                +\n              </button>\n            </div>\n            <button type=\"submit\">Buy</button>\n          </form>\n        </td>\n        <td>\n          <form\n            className=\"transaction-form\"\n            onSubmit={sellStock}\n            data-symbol={stock.symbol}\n          >\n            <div>\n              <button\n                type=\"button\"\n                aria-label=\"subtract 1\"\n                onClick={() => {\n                  props.onSetErrorMessage(\"\");\n                  props.onUpdateQuantity(\n                    stock.symbol,\n                    stock.sellQuantity - 1,\n                    \"sell\",\n                    props.owned[key].quantity\n                  );\n                }}\n              >\n                -\n              </button>\n              <input\n                type=\"number\"\n                id=\"quantity\"\n                name=\"quantity\"\n                aria-label=\"quantity\"\n                value={stock.sellQuantity}\n                min=\"0\"\n                onChange={(e) => {\n                  props.onSetErrorMessage(\"\");\n                  props.onUpdateQuantity(stock.symbol, e.target.value, \"sell\");\n                }}\n                max={props.owned[key].quantity}\n              />\n              <button\n                type=\"button\"\n                aria-label=\"add 1\"\n                onClick={() => {\n                  props.onSetErrorMessage(\"\");\n                  props.onUpdateQuantity(\n                    stock.symbol,\n                    stock.sellQuantity + 1,\n                    \"sell\",\n                    props.owned[key].quantity\n                  );\n                }}\n              >\n                +\n              </button>\n            </div>\n            <button type=\"submit\">Sell</button>\n          </form>\n        </td>\n      </tr>\n    );\n\n    // Add to total value\n    totalValue +=\n      stock.prices[stock.prices.length - 1] * props.owned[key].quantity;\n  }\n\n  return (\n    <div>\n      <h1 className=\"page-title\">Portfolio</h1>\n      <div>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>Symbol</th>\n              <th>Company</th>\n              <th>Change</th>\n              <th>Quantity</th>\n              <th>Price</th>\n              <th>Value</th>\n              <th>Buy</th>\n              <th>Sell</th>\n            </tr>\n          </thead>\n          <tbody>{displayOwned}</tbody>\n          <tfoot>\n            <tr>\n              <td></td>\n              <td></td>\n              <td></td>\n              <td></td>\n              <td>Cash: </td>\n              <td className=\"r-align\">{props.cash.toFixed(2)}</td>\n              <td></td>\n              <td></td>\n            </tr>\n            <tr>\n              <td></td>\n              <td></td>\n              <td></td>\n              <td></td>\n              <td>Total:</td>\n              <td className=\"r-align\">\n                {(totalValue + props.cash).toFixed(2)}\n              </td>\n              <td></td>\n              <td></td>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    stocks: state.stocks.stocks,\n    owned: state.stocks.owned,\n    isTransactionsLoaded: state.stocks.isTransactionsLoaded,\n    isStocksLoaded: state.stocks.isStocksLoaded,\n    cash: state.auth.cash,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchStocks: () => {\n      dispatch(actions.fetchStocks());\n    },\n    onFetchTransactions: () => {\n      dispatch(actions.fetchTransactions());\n    },\n    onUpdateQuantity: (symbol, value, sell, max) => {\n      dispatch(actions.updateQuantity(symbol, value, sell, max));\n    },\n    onBuyStock: (stock, quantity, index) => {\n      dispatch(actions.buyStock(stock, quantity, index));\n    },\n    onSetErrorMessage: (message, success) => {\n      dispatch(actions.setErrorMessage(message, success));\n    },\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Portfolio);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst AuthShow = (props) => {\n  let display;\n  if (props.isAuth) {\n    display = <React.Fragment>{props.children}</React.Fragment>;\n  } else {\n    display = null;\n  }\n  return display;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.auth.isAuth,\n  };\n};\n\nexport default connect(mapStateToProps)(AuthShow);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst AuthHide = (props) => {\n  let display;\n  if (!props.isAuth) {\n    display = <React.Fragment>{props.children}</React.Fragment>;\n  } else {\n    display = null;\n  }\n  return display;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.auth.isAuth,\n  };\n};\n\nexport default connect(mapStateToProps)(AuthHide);\n","import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport AuthShow from \"./AuthShow\";\nimport AuthHide from \"./AuthHide\";\nimport * as actions from \"../store/actions/index\";\nimport classes from \"./Nav.module.css\";\n\nconst Nav = (props) => {\n  // Logout user by removing credentials local storage\n  let history = useHistory();\n  const logout = () => {\n    localStorage.removeItem(\"jwtToken\");\n    localStorage.removeItem(\"jwtExpires\");\n    localStorage.removeItem(\"cash\");\n    history.push(\"/\");\n    props.onDeauthorize();\n    props.onSetErrorMessage(\"Logged Out\", \"success\");\n  };\n\n  return (\n    <nav className={classes.Nav}>\n      <ul className={classes.top}>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <AuthHide>\n          <li>\n            <Link to=\"/register\">Register</Link>\n          </li>\n        </AuthHide>\n        <AuthHide>\n          <li>\n            <Link to=\"/login\">Login</Link>\n          </li>\n        </AuthHide>\n        <AuthShow>\n          <li>\n            <Link to=\"/transactions\">Transactions</Link>\n          </li>\n        </AuthShow>\n        <AuthShow>\n          <li>\n            <Link to=\"/stocks\">Stocks</Link>\n          </li>\n        </AuthShow>\n        <AuthShow>\n          <li>\n            <Link to=\"/portfolio\">Portfolio</Link>\n          </li>\n        </AuthShow>\n        <AuthShow>\n          <li>\n            <Link to=\"/search\">Search</Link>\n          </li>\n        </AuthShow>\n        <AuthShow>\n          <li>\n            <button onClick={logout}>Log out</button>\n          </li>\n        </AuthShow>\n      </ul>\n      <ul className={classes.bottom}>\n        <li>\n          <AuthShow>\n            <span>Cash: ${props.cash}</span>\n          </AuthShow>\n        </li>\n        <li>\n          <h2 className={props.errorMessage.success ? \"success\" : \"\"}>\n            {props.errorMessage.message}\n          </h2>\n        </li>\n        <li></li>\n      </ul>\n    </nav>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    cash: state.auth.cash,\n    errorMessage: state.auth.errorMessage,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onDeauthorize: () => {\n      dispatch(actions.deauthorize());\n    },\n    onSetErrorMessage: (message, success) => {\n      dispatch(actions.setErrorMessage(message, success));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import \"./App.css\";\nimport React, { useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Register from \"./components/Register\";\nimport Login from \"./components/Login\";\nimport AuthRedirect from \"./components/AuthRedirect\";\nimport Home from \"./components/Home\";\nimport Search from \"./components/Search\";\nimport Stocks from \"./components/Stocks\";\nimport Symbol from \"./components/Symbol\";\nimport Transactions from \"./components/Transactions\";\nimport Portfolio from \"./components/Portfolio\";\nimport Nav from \"./components/Nav\"\n\nimport { connect } from \"react-redux\";\nimport * as actions from \"./store/actions/index\";\nimport ScrollToTop from \"./components/ScrollToTop\";\n\nconst App = (props) => {\n  // Check if user has a valid token in local storage\n  const isLoggedIn = () => {\n    const expiration = localStorage.getItem(\"jwtExpires\");\n    return expiration && Number(expiration) > Date.now();\n  };\n\n  // Authorize user if they have a valid token\n  useEffect(() => {\n    if (isLoggedIn()) {\n      props.onAuthorize();\n      props.onSetCash(localStorage.getItem(\"cash\"));\n    }\n    props.onLoadingFinish();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <ScrollToTop/>\n      <Nav/>\n      <main className={\"main\"}>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n          <Route path=\"/register\">\n            <Register />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/search\">\n            <AuthRedirect>\n              <Search />\n            </AuthRedirect>\n          </Route>\n          <Route path=\"/transactions\">\n            <AuthRedirect>\n              <Transactions />\n            </AuthRedirect>\n          </Route>\n          <Route path=\"/stocks/:symbol\">\n            <AuthRedirect>\n              <Symbol />\n            </AuthRedirect>\n          </Route>\n          <Route path=\"/portfolio\">\n            <AuthRedirect>\n              <Portfolio />\n            </AuthRedirect>\n          </Route>\n          <Route path=\"/stocks\">\n            <AuthRedirect>\n              <Stocks />\n            </AuthRedirect>\n          </Route>\n        </Switch>\n      </main>\n      <footer className={\"footer\"}>\n        <a href=\"https://iexcloud.io\">Data provided by IEX Cloud</a>\n      </footer>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.auth.isAuth,\n    cash: state.auth.cash,\n    errorMessage: state.auth.errorMessage,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuthorize: () => {\n      dispatch(actions.authorize());\n    },\n    onDeauthorize: () => {\n      dispatch(actions.deauthorize());\n    },\n    onLoadingFinish: () => {\n      dispatch(actions.loadingFinish());\n    },\n    onSetCash: (cash) => {\n      dispatch(actions.setCash(cash));\n    },\n    onSetErrorMessage: (message) => {\n      dispatch(actions.setErrorMessage(message))\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  isAuth: false,\n  isLoading: true,\n  errorMessage: \"\",\n};\n\nconst authorize = (state, action) => {\n  return {\n    ...state,\n    isAuth: true,\n  };\n};\n\nconst deauthorize = (state, action) => {\n  return {\n    ...state,\n    isAuth: false,\n  };\n};\n\nconst loadingFinish = (state, action) => {\n  return {\n    ...state,\n    isLoading: false,\n  };\n};\n\nconst setCash = (state, action) => {\n  return {\n    ...state,\n    cash: Number(action.cash),\n  };\n};\n\nconst setErrorMessage = (state, action) => {\n  return {\n    ...state,\n    errorMessage: { message: action.message, success: action.success },\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTHORIZE:\n      return authorize(state, action);\n    case actionTypes.DEAUTHORIZE:\n      return deauthorize(state, action);\n    case actionTypes.LOADING_FINISH:\n      return loadingFinish(state, action);\n    case actionTypes.SET_CASH:\n      return setCash(state, action);\n    case actionTypes.SET_ERROR_MESSAGE:\n      return setErrorMessage(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  stocks: [],\n  transactions: [],\n  isTransactionsLoaded: false,\n  isStocksLoaded: false,\n  owned: {},\n};\n\nconst loadStocks = (state, action) => {\n  const stocks = action.stocks;\n  for (let stock of stocks) {\n    stock.buyQuantity = \"\";\n    stock.sellQuantity = \"\";\n  }\n  return {\n    ...state,\n    stocks: stocks,\n    isStocksLoaded: true,\n  };\n};\n\n// Add to quantity to buy from user input\nconst updateQuantity = (state, action) => {\n  const stocksCopy = [];\n  for (let stock of state.stocks) {\n    stocksCopy.push({\n      ...stock,\n      prices: [...stock.prices],\n    });\n  }\n\n  // Find index of stock being bought\n  const index = stocksCopy.findIndex((stock) => stock.symbol === action.symbol);\n\n  // Change sell quantity if action was to sell\n  if (action.sell === \"sell\") {\n    stocksCopy[index].sellQuantity = Number(action.value);\n\n    // Do nothing if the value will become negative\n    if (stocksCopy[index].sellQuantity <= 0) {\n      stocksCopy[index].sellQuantity = \"\";\n    }\n    // If value is greater than the max leave it\n    if (stocksCopy[index].sellQuantity > action.max) {\n      stocksCopy[index].sellQuantity = state.stocks[index].sellQuantity;\n    }\n  } else {\n    stocksCopy[index].buyQuantity = Number(action.value);\n\n    // Do nothing if the value will become negative\n    if (stocksCopy[index].buyQuantity <= 0) {\n      stocksCopy[index].buyQuantity = \"\";\n    }\n\n    // If value is greater than the max leave it\n    if (stocksCopy[index].sellQuantity > action.max) {\n      stocksCopy[index].sellQuantity = state.stocks[index].sellQuantity;\n    }\n  }\n\n  return {\n    ...state,\n    stocks: stocksCopy,\n  };\n};\n\n// Create inventory of users stocks by summing users transactions\nconst createOwned = (state, transactions) => {\n  const owned = {};\n  for (let transaction of transactions) {\n    const stock = state.stocks.filter((el) => {\n      return transaction.stock === el._id;\n    })[0];\n\n    // If not entry for stock create new\n    if (!owned[stock.symbol]) {\n      owned[stock.symbol] = {};\n      owned[stock.symbol].companyName = stock.companyName;\n      owned[stock.symbol].prices = stock.prices;\n    }\n\n    // Get current quantity or set to 0 if not defined\n    const currentQuantity = owned[stock.symbol].quantity;\n    if (!currentQuantity) {\n      owned[stock.symbol].quantity = 0;\n    }\n    owned[stock.symbol].quantity =\n      owned[stock.symbol].quantity + transaction.quantity;\n  }\n\n  // Delete from owned if quantity is 0\n  for (let key in owned) {\n    if (owned[key].quantity === 0) {\n      delete owned[key];\n    }\n  }\n  return owned;\n};\n\nconst loadTransactions = (state, action) => {\n  const transactions = action.transactions;\n  const owned = createOwned(state, transactions);\n  return {\n    ...state,\n    isTransactionsLoaded: true,\n    transactions,\n    owned,\n  };\n};\n\nconst newTransaction = (state, action) => {\n  const transactions = [...state.transactions, action.transaction];\n  const owned = createOwned(state, transactions);\n  return {\n    ...state,\n    transactions,\n    owned,\n  };\n};\n\nconst addStock = (state, action) => {\n  return {\n    ...state,\n    stocks: [...state.stocks, action.stock],\n  };\n};\n\n// Add id to last added stock if not included\nconst addNewId = (state, action) => {\n  const stocksCopy = [];\n  for (let stock of state.stocks) {\n    stocksCopy.push({\n      ...stock,\n      prices: [...stock.prices],\n    });\n  }\n\n  // Find index of stock to add id to\n  const index = stocksCopy.findIndex((stock) => stock.symbol === action.symbol);\n\n  // Set id to id from database\n  if (!stocksCopy[index]._id) {\n    stocksCopy[index]._id = action._id;\n  }\n\n  return {\n    ...state,\n    stocks: stocksCopy,\n  };\n};\n\nconst stocksReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.LOAD_STOCKS:\n      return loadStocks(state, action);\n    case actionTypes.UPDATE_QUANTITY:\n      return updateQuantity(state, action);\n    case actionTypes.LOAD_TRANSACTIONS:\n      return loadTransactions(state, action);\n    case actionTypes.NEW_TRANSACTION:\n      return newTransaction(state, action);\n    case actionTypes.ADD_STOCK:\n      return addStock(state, action);\n    case actionTypes.ADD_NEW_ID:\n      return addNewId(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default stocksReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\nimport auth from \"./store/reducers/auth\";\nimport stocks from \"./store/reducers/stocks\"\nimport thunk from \"redux-thunk\";\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  auth: auth,\n  stocks: stocks,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav\":\"Nav_Nav__2KBhF\",\"top\":\"Nav_top__2Y5Ew\",\"bottom\":\"Nav_bottom__LGp4B\",\"success\":\"Nav_success__2358B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"Home_Home__3sYQR\"};"],"sourceRoot":""}