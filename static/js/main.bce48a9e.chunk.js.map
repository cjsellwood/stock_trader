{"version":3,"sources":["store/actions/actionTypes.js","store/actions/auth.js","store/actions/stocks.js","components/Register.js","components/Login.js","components/AuthRedirect.js","components/AuthShow.js","components/AuthHide.js","components/Home.js","components/Search.js","components/Stocks.js","components/Symbol.js","components/Transactions.js","components/Owned.js","App.js","store/reducers/auth.js","store/reducers/stocks.js","index.js"],"names":["AUTHORIZE","DEAUTHORIZE","LOADING_FINISH","LOAD_STOCKS","UPDATE_QUANTITY","LOAD_TRANSACTIONS","NEW_TRANSACTION","SET_CASH","SET_ERROR_MESSAGE","ADD_STOCK","ADD_NEW_ID","authorize","type","actionTypes","setCash","cash","setErrorMessage","message","fetchStocks","dispatch","jwtToken","localStorage","getItem","axios","get","headers","Authorization","then","response","stocks","data","catch","err","actions","updateQuantity","symbol","value","sell","max","buyStock","stock","quantity","index","post","_id","transaction","newId","setItem","fetchTransactions","transactions","connect","onPostRegister","registerForm","history","console","dir","token","expires","Date","now","Number","expiresIn","push","error","log","onSetErrorMessage","props","useState","username","password","confirmPassword","setRegisterForm","useHistory","handleInput","e","registerFormCopy","target","name","onSubmit","preventDefault","htmlFor","id","onChange","required","minLength","aria-label","onPostLogin","loginForm","setLoginForm","loginFormCopy","state","isAuth","auth","isLoading","Fragment","children","to","Home","onFetchStocks","onUpdateQuantity","onBuyStock","onAddStock","useEffect","length","displayStock","search","setSearch","setIndex","companyName","prices","map","price","getAttribute","findIndex","buyQuantity","totalPrice","data-symbol","onClick","min","searchIndex","toUpperCase","result","maxLength","displayStocks","change","toFixed","useParams","filter","el","isTransactionsLoaded","onFetchTransactions","displayTransactions","date","toLocaleDateString","reverse","owned","sellStock","ownedQuantity","sellQuantity","totalValue","displayOwned","key","errorMessage","onAuthorize","onDeauthorize","onLoadingFinish","onSetCash","listen","location","expiration","isLoggedIn","className","removeItem","path","exact","href","initialState","action","deauthorize","loadingFinish","reducer","loadStocks","stocksCopy","createOwned","loadTransactions","newTransaction","addStock","addNewId","stocksReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bce48a9e.chunk.js","sourcesContent":["export const AUTHORIZE = \"AUTHORIZE\";\nexport const DEAUTHORIZE = \"DEAUTHORIZE\";\nexport const LOADING_FINISH = \"LOADING_FINISH\";\n\nexport const LOAD_STOCKS = \"LOAD_STOCKS\";\nexport const UPDATE_QUANTITY = \"UPDATE_QUANTITY\";\n\nexport const LOAD_TRANSACTIONS = \"LOAD_TRANSACTIONS\"\nexport const NEW_TRANSACTION = \"NEW_TRANSACTION\";\n\nexport const SET_CASH = \"SET_CASH\";\nexport const SET_ERROR_MESSAGE = \"SET_ERROR_MESSAGE\"\n\nexport const ADD_STOCK = \"ADD_STOCK\";\nexport const ADD_NEW_ID = \"ADD_NEW_ID\";\n\n","import * as actionTypes from \"../actions/actionTypes\";\nimport axios from \"axios\";\n\n// Authorize user\nexport const authorize = () => {\n  return {\n    type: actionTypes.AUTHORIZE,\n  };\n};\n\n// Deauthorize user\nexport const deauthorize = () => {\n  return {\n    type: actionTypes.DEAUTHORIZE,\n  };\n};\n\n// Stop loading\nexport const loadingFinish = () => {\n  return {\n    type: actionTypes.LOADING_FINISH,\n  };\n};\n\nexport const setCash = (cash) => {\n  return {\n    type: actionTypes.SET_CASH,\n    cash,\n  };\n};\n\nexport const setErrorMessage = (message) => {\n  return {\n    type: actionTypes.SET_ERROR_MESSAGE,\n    message,\n  }\n}\n\n// Handle login submission to backend\nexport const postLogin = (loginForm, history) => {\n  return (dispatch) => {\n    axios\n      .post(\"http://localhost:3000/login\", {\n        ...loginForm,\n      })\n      .then((response) => {\n        console.dir(response);\n        // Store jwt token and when it expires in local storage\n        localStorage.setItem(\"jwtToken\", response.data.token);\n        const expires = Date.now() + Number(response.data.expiresIn);\n        localStorage.setItem(\"jwtExpires\", expires);\n\n        // Redirect to home page\n        history.push(\"/\");\n\n        // Login user with redux state auth\n        dispatch(authorize());\n\n        // Save users cash\n        localStorage.setItem(\"cash\", response.data.cash);\n        dispatch(setCash(response.data.cash));\n      })\n      .catch((error) => {\n        console.log(\"ERROR\", error.response.data.message);\n        dispatch(setErrorMessage(error.response.data.message))\n      });\n  };\n};\n\n// Handle register user on the backend\nexport const postRegister = (registerForm, history) => {\n  return (dispatch) => {\n    axios\n      .post(\"http://localhost:3000/register\", {\n        ...registerForm,\n      })\n      .then((response) => {\n        console.dir(response);\n        // Store jwt token and when it expires in local storage\n        localStorage.setItem(\"jwtToken\", response.data.token);\n        const expires = Date.now() + Number(response.data.expiresIn);\n        localStorage.setItem(\"jwtExpires\", expires);\n\n        // Redirect to home page\n        history.push(\"/\");\n\n        // Login user with redux state auth\n        dispatch(authorize());\n\n        // Save users cash\n        localStorage.setItem(\"cash\", response.data.cash);\n        dispatch(setCash(response.data.cash));\n      })\n      .catch((error) => {\n        console.log(\"ERROR\", error.response.data.message);\n        dispatch(setErrorMessage(error.response.data.message))\n      });\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\nimport * as actions from \"./index\";\nimport axios from \"axios\";\n\n// Authorize user\nexport const loadStocks = (stocks) => {\n  return {\n    type: actionTypes.LOAD_STOCKS,\n    stocks,\n  };\n};\n\n// Fetch stocks from database\nexport const fetchStocks = () => {\n  return (dispatch) => {\n    const jwtToken = localStorage.getItem(\"jwtToken\");\n    axios\n      .get(\"http://localhost:3000/stocks\", {\n        headers: {\n          Authorization: `Bearer ${jwtToken}`,\n        },\n      })\n      .then((response) => {\n        dispatch(loadStocks(response.data.stocks));\n      })\n      .catch((err) => {\n        dispatch(actions.setErrorMessage(err.response.data.message))\n      });\n  };\n};\n\n// Change quantity to buy based on user input\nexport const updateQuantity = (symbol, value, sell, max) => {\n  return {\n    type: actionTypes.UPDATE_QUANTITY,\n    symbol,\n    value,\n    sell,\n    max,\n  };\n};\n\nexport const newTransaction = (transaction) => {\n  return {\n    type: actionTypes.NEW_TRANSACTION,\n    transaction,\n  };\n};\n\nexport const addNewId = (_id) => {\n  return {\n    type: actionTypes.ADD_NEW_ID,\n    _id,\n  };\n};\n\n// Buy a stock on the backend\nexport const buyStock = (stock, quantity, index) => {\n  return (dispatch) => {\n    const jwtToken = localStorage.getItem(\"jwtToken\");\n    axios\n      .post(\n        \"http://localhost:3000/stocks/buy\",\n        { stock, quantity },\n        {\n          headers: {\n            Authorization: `Bearer ${jwtToken}`,\n          },\n        }\n      )\n      .then((response) => {\n        // Add id if result was from stock api search\n        dispatch(addNewId(response.data.newId));\n\n        // Save updated cash value\n        dispatch(actions.setCash(response.data.cash));\n        localStorage.setItem(\"cash\", response.data.cash);\n\n        // Push to transactions state\n        dispatch(actions.newTransaction(response.data.transaction));\n      })\n      .catch((err) => {\n        dispatch(actions.setErrorMessage(err.response.data.message))\n      });\n  };\n};\n\nexport const loadTransactions = (transactions) => {\n  return {\n    type: actionTypes.LOAD_TRANSACTIONS,\n    transactions,\n  };\n};\n\n// Fetch stocks from database\nexport const fetchTransactions = () => {\n  return (dispatch) => {\n    const jwtToken = localStorage.getItem(\"jwtToken\");\n    axios\n      .get(\"http://localhost:3000/stocks/transactions\", {\n        headers: {\n          Authorization: `Bearer ${jwtToken}`,\n        },\n      })\n      .then((response) => {\n        dispatch(loadTransactions(response.data.transactions));\n      })\n      .catch((err) => {\n        dispatch(actions.setErrorMessage(err.response.data.message))\n      });\n  };\n};\n\n// Add new stock to state from search results\nexport const addStock = (stock) => {\n  return {\n    type: actionTypes.ADD_STOCK,\n    stock,\n  };\n};\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\n\nconst Register = (props) => {\n  const [registerForm, setRegisterForm] = useState({\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  let history = useHistory();\n\n  // Change register details when inputs change\n  const handleInput = (e) => {\n    const registerFormCopy = {\n      ...registerForm,\n      [e.target.name]: e.target.value,\n    };\n    setRegisterForm(registerFormCopy);\n    props.onSetErrorMessage(\"\")\n  };\n\n  // Submit register form handler\n  const handleSubmission = (e) => {\n    e.preventDefault();\n\n    // Submit to backend\n    props.onPostRegister(registerForm, history);\n  };\n\n  return (\n    <div>\n      <h1>Register</h1>\n      <form onSubmit={handleSubmission}>\n        <div>\n          <label htmlFor=\"username\">Username</label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            value={registerForm.username}\n            onChange={handleInput}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={registerForm.password}\n            onChange={handleInput}\n            required\n            minLength=\"8\"\n          />\n        </div>\n        <div>\n          <label htmlFor=\"confirmPassword\">Confirm Password</label>\n          <input\n            type=\"password\"\n            id=\"confirmPassword\"\n            name=\"confirmPassword\"\n            value={registerForm.confirmPassword}\n            onChange={handleInput}\n            required\n            minLength=\"8\"\n          />\n        </div>\n        <button type=\"submit\" aria-label=\"submit\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onPostRegister: (registerForm, history) => {\n      dispatch(actions.postRegister(registerForm, history));\n    },\n    onSetErrorMessage: (message) => {\n      dispatch(actions.setErrorMessage(message))\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Register);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\"\nimport { useHistory } from \"react-router-dom\";\n\nconst Login = (props) => {\n  const [loginForm, setLoginForm] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  // const [errorMessage, setErrorMessage] = useState(\"\");\n\n  // Change register details when inputs change\n  const handleInput = (e) => {\n    const loginFormCopy = {\n      ...loginForm,\n      [e.target.name]: e.target.value,\n    };\n    setLoginForm(loginFormCopy);\n    props.onSetErrorMessage(\"\");\n  };\n\n  let history = useHistory();\n\n  // Submit register form handler\n  const handleSubmission = (e) => {\n    e.preventDefault();\n    // setErrorMessage(\"\");\n\n    // Submit to backend\n    props.onPostLogin(loginForm, history)\n    \n  };\n\n  return (\n    <div>\n      <h1>Login</h1>\n      <form onSubmit={handleSubmission}>\n        <div>\n          <label htmlFor=\"username\">Username</label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            value={loginForm.username}\n            onChange={handleInput}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={loginForm.password}\n            onChange={handleInput}\n            required\n            minLength=\"8\"\n          />\n        </div>\n        <button type=\"submit\" aria-label=\"submit\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onPostLogin: (loginForm, history) => {\n      dispatch(actions.postLogin(loginForm, history));\n    },\n    onSetErrorMessage: (message) => {\n      dispatch(actions.setErrorMessage(message))\n    }\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst AuthRedirect = (props) => {\n  console.log(\"authredirect\")\n  let display;\n  if (props.isAuth) {\n    display = <React.Fragment>{props.children}</React.Fragment>;\n  } else if (props.isLoading) {\n    display = <h1>Loading...</h1>\n  } else {\n    display = <Redirect to=\"/login\" />;\n  }\n  return display;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.auth.isAuth,\n    isLoading: state.auth.isLoading,\n  };\n};\n\nexport default connect(mapStateToProps)(AuthRedirect);\n","import React from \"react\";\nimport {connect} from \"react-redux\"\n\nconst AuthShow = (props) => {\n  let display;\n  if (props.isAuth) {\n    display = <React.Fragment>{props.children}</React.Fragment>;\n  } else {\n    display = null;\n  }\n  return display;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.auth.isAuth,\n  };\n};\n\nexport default connect(mapStateToProps)(AuthShow);\n","import React from 'react'\nimport { connect } from \"react-redux\";\n\nconst AuthHide = props => {\n  let display;\n  if (!props.isAuth) {\n    display = <React.Fragment>{props.children}</React.Fragment>;\n  } else {\n    display = null;\n  }\n  return (\n    display\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.auth.isAuth,\n  }\n}\n\nexport default connect(mapStateToProps)(AuthHide)\n","import React from 'react'\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Home</h1>\n      <p>A site to practice trading stocks</p>\n      <p>Uses real data which is updated daily</p>\n      <p>With risk free simulated trades and portfolios</p>\n    </div>\n  )\n}\n\nexport default Home\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\n\nconst Search = (props) => {\n  useEffect(() => {\n    // If hasn't been run before fetch stocks from database\n    if (!props.stocks.length) {\n      props.onFetchStocks();\n    } else {\n      // Reset buy quantity for all stocks\n      for (let stock of props.stocks) {\n        props.onUpdateQuantity(stock.symbol, 0);\n      }\n    }\n\n    // eslint-disable-next-line\n  }, []);\n\n  // Buy a stock\n  const buyStock = (e) => {\n    e.preventDefault();\n    const symbol = e.target.getAttribute(\"data-symbol\");\n\n    // Find index of stock being bought\n    const index = props.stocks.findIndex((stock) => stock.symbol === symbol);\n\n    // Check if user can afford to buy the quantity entered\n    const price =\n      props.stocks[index].prices[props.stocks[index].prices.length - 1];\n    const quantity = props.stocks[index].buyQuantity;\n    const totalPrice = price * quantity;\n    if (totalPrice !== 0 && totalPrice < props.cash) {\n      props.onBuyStock(props.stocks[index], quantity, index);\n    } else {\n      if (quantity === 0) {\n        props.onSetErrorMessage(\"Quantity cannot be 0\")\n      }\n      if (totalPrice < props.cash) {\n        props.onSetErrorMessage(\"Cannot afford\")\n      }\n    }\n  };\n\n  const [search, setSearch] = useState(\"\");\n\n  // Update search term with users input\n  const handleInput = (e) => {\n    setSearch(e.target.value);\n    props.onSetErrorMessage(\"\")\n  };\n\n  const [index, setIndex] = useState(-1);\n\n  // Handle submission of search form\n  const handleSubmission = (e) => {\n    e.preventDefault();\n    console.log(search);\n\n    // Check state for search term first\n    const searchIndex = props.stocks.findIndex((stock) => {\n      return stock.symbol === search.toUpperCase();\n    });\n\n    // If found in state display results from it\n    if (searchIndex !== -1) {\n      props.onSetErrorMessage(\"\")\n      setIndex(searchIndex);\n    } else {\n      // If not found in state check database and stock api\n      const jwtToken = localStorage.getItem(\"jwtToken\");\n      axios\n        .post(`http://localhost:3000/search`, {symbol: search}, {\n          headers: {\n            Authorization: `Bearer ${jwtToken}`,\n          },\n        })\n        .then((response) => {\n          const result = response.data;\n\n          // Add stock to state\n          props.onAddStock({\n            symbol: result.symbol,\n            companyName: result.companyName,\n            prices: result.prices,\n            buyQuantity: 0,\n          });\n\n          // Index will then be set to the newly added stock which is last\n          setIndex(props.stocks.length);\n        })\n        .catch((error) => {\n          setIndex(-1);\n          props.onSetErrorMessage(error.response.data.message);\n        });\n    }\n  };\n\n  // Display result of search\n  let displayStock;\n  if (index !== -1) {\n    displayStock = [\n      <div key={props.stocks[index].symbol}>\n        <h1>{props.stocks[index].symbol}</h1>\n        <p>Company: {props.stocks[index].companyName}</p>\n        <p>Price history</p>\n        {props.stocks[index].prices.map((price, index) => {\n          return <span key={index}>{price}, </span>;\n        })}\n        <form onSubmit={buyStock} data-symbol={props.stocks[index].symbol}>\n          <button\n            type=\"button\"\n            aria-label=\"subtract 1\"\n            onClick={() =>\n              props.onUpdateQuantity(\n                props.stocks[index].symbol,\n                props.stocks[index].buyQuantity - 1\n              )\n            }\n          >\n            -\n          </button>\n          <input\n            type=\"number\"\n            id=\"quantity\"\n            name=\"quantity\"\n            aria-label=\"quantity\"\n            value={props.stocks[index].buyQuantity}\n            min=\"0\"\n            onChange={(e) =>\n              props.onUpdateQuantity(props.stocks[index].symbol, e.target.value)\n            }\n          />\n          <button\n            type=\"button\"\n            aria-label=\"add 1\"\n            onClick={() =>\n              props.onUpdateQuantity(\n                props.stocks[index].symbol,\n                props.stocks[index].buyQuantity + 1\n              )\n            }\n          >\n            +\n          </button>\n          {/* <span>{stock.prices[stock.prices.length - 1] * stock.buyQuantity}</span> */}\n          <button type=\"submit\">Buy</button>\n        </form>\n      </div>,\n    ];\n  }\n\n  return (\n    <div>\n      <h1>Search by Symbol</h1>\n      <form onSubmit={handleSubmission}>\n        <div>\n          <label htmlFor=\"search\">Symbol</label>\n          <input\n            type=\"text\"\n            id=\"search\"\n            name=\"search\"\n            value={search}\n            onChange={handleInput}\n            required\n            maxLength=\"6\"\n          />\n        </div>\n        <button type=\"submit\">Search</button>\n      </form>\n      {displayStock}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    stocks: state.stocks.stocks,\n    cash: state.auth.cash,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchStocks: () => {\n      dispatch(actions.fetchStocks());\n    },\n    onUpdateQuantity: (symbol, value) => {\n      dispatch(actions.updateQuantity(symbol, value));\n    },\n    onBuyStock: (stock, quantity, index) => {\n      dispatch(actions.buyStock(stock, quantity, index));\n    },\n    onAddStock: (stock) => {\n      dispatch(actions.addStock(stock));\n    },\n    onSetErrorMessage: (message) => {\n      dispatch(actions.setErrorMessage(message));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\n\nconst Stocks = (props) => {\n  useEffect(() => {\n    // If hasn't been run before fetch stocks from database\n    if (!props.stocks.length) {\n      props.onFetchStocks();\n    } else {\n      // Reset buy quantity for all stocks\n      for (let stock of props.stocks) {\n        props.onUpdateQuantity(stock.symbol, 0);\n      }\n    }\n\n    // eslint-disable-next-line\n  }, []);\n\n  // Buy a stock\n  const buyStock = (e) => {\n    e.preventDefault();\n    const symbol = e.target.getAttribute(\"data-symbol\");\n\n    // Find index of stock being bought\n    const index = props.stocks.findIndex((stock) => stock.symbol === symbol);\n\n    // Check if user can afford to buy the quantity entered\n    const price =\n      props.stocks[index].prices[props.stocks[index].prices.length - 1];\n    const quantity = props.stocks[index].buyQuantity;\n    const totalPrice = price * quantity;\n    console.log(totalPrice);\n    if (totalPrice !== 0 && totalPrice < props.cash) {\n      props.onBuyStock(props.stocks[index], quantity, index);\n      props.onUpdateQuantity(symbol, 0);\n    } else {\n      console.log(\"Can't Afford or quantity 0\");\n    }\n  };\n\n  const displayStocks = props.stocks.map((stock) => {\n    // Percentage change since yesterday\n    const change =\n      ((stock.prices[stock.prices.length - 1] -\n        stock.prices[stock.prices.length - 2]) /\n        stock.prices[stock.prices.length - 2]) *\n      100;\n    return (\n      <tr key={stock.symbol}>\n        <td>\n          <Link to={`/stocks/${stock.symbol}`}>{stock.symbol}</Link>\n        </td>\n        <td>{stock.companyName}</td>\n        <td>{stock.prices.length > 1 ? change.toFixed(2) + \"%\" : \"-\"}</td>\n        <td>{stock.prices[stock.prices.length - 1].toFixed(2)}</td>\n        <td>\n          <form onSubmit={buyStock} data-symbol={stock.symbol}>\n            <button\n              type=\"button\"\n              aria-label=\"subtract 1\"\n              onClick={() =>\n                props.onUpdateQuantity(stock.symbol, stock.buyQuantity - 1)\n              }\n            >\n              -\n            </button>\n            <input\n              type=\"number\"\n              id=\"quantity\"\n              name=\"quantity\"\n              aria-label=\"quantity\"\n              value={stock.buyQuantity}\n              min=\"0\"\n              onChange={(e) =>\n                props.onUpdateQuantity(stock.symbol, e.target.value)\n              }\n            />\n            <button\n              type=\"button\"\n              aria-label=\"add 1\"\n              onClick={() =>\n                props.onUpdateQuantity(stock.symbol, stock.buyQuantity + 1)\n              }\n            >\n              +\n            </button>\n            {/* <span>{stock.prices[stock.prices.length - 1] * stock.buyQuantity}</span> */}\n            <button type=\"submit\">Buy</button>\n          </form>\n        </td>\n      </tr>\n    );\n  });\n\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <th>Symbol</th>\n            <th>Company</th>\n            <th>Change</th>\n            <th>Price</th>\n            <th>Buy</th>\n          </tr>\n        </thead>\n        <tbody>{displayStocks}</tbody>\n      </table>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    stocks: state.stocks.stocks,\n    cash: state.auth.cash,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchStocks: () => {\n      dispatch(actions.fetchStocks());\n    },\n    onUpdateQuantity: (symbol, value) => {\n      dispatch(actions.updateQuantity(symbol, value));\n    },\n    onBuyStock: (stock, quantity, index) => {\n      dispatch(actions.buyStock(stock, quantity, index));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Stocks);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport * as actions from \"../store/actions/index\";\n\nconst Symbol = (props) => {\n  // If hasn't been run before\n  useEffect(() => {\n    if (!props.stocks.length) {\n      props.onFetchStocks();\n    } else {\n      // Reset buy quantity for all stocks\n      for (let stock of props.stocks) {\n        props.onUpdateQuantity(stock.symbol, 0);\n      }\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  // Buy a stock\n  const buyStock = (e) => {\n    e.preventDefault();\n    const symbol = e.target.getAttribute(\"data-symbol\");\n\n    // Find index of stock being bought\n    const index = props.stocks.findIndex((stock) => stock.symbol === symbol);\n\n    // Check if user can afford to buy the quantity entered\n    const price =\n      props.stocks[index].prices[props.stocks[index].prices.length - 1];\n    const quantity = props.stocks[index].buyQuantity;\n    const totalPrice = price * quantity;\n    console.log(totalPrice);\n    if (totalPrice !== 0 && totalPrice < props.cash) {\n      props.onBuyStock(props.stocks[index], quantity, index);\n      props.onUpdateQuantity(symbol, 0);\n    } else {\n      console.log(\"Can't Afford or quantity 0\");\n    }\n  };\n\n  // Find stock with with symbol in url\n  const { symbol } = useParams();\n  const stock = props.stocks.filter((el) => {\n    return el.symbol === symbol.toUpperCase();\n  });\n\n  let displayStock = [];\n  if (stock.length) {\n    displayStock = stock.map((el) => {\n      return (\n        <div key={el.symbol}>\n          <h1>{el.symbol}</h1>\n          <p>{el.companyName}</p>\n          <p>Price history</p>\n          {el.prices.map((price, index) => {\n            return <span key={index}>{price}, </span>;\n          })}\n          <form onSubmit={buyStock} data-symbol={el.symbol}>\n            <button\n              type=\"button\"\n              aria-label=\"subtract 1\"\n              onClick={() =>\n                props.onUpdateQuantity(el.symbol, el.buyQuantity - 1)\n              }\n            >\n              -\n            </button>\n            <input\n              type=\"number\"\n              id=\"quantity\"\n              name=\"quantity\"\n              aria-label=\"quantity\"\n              value={el.buyQuantity}\n              min=\"0\"\n              onChange={(e) =>\n                props.onUpdateQuantity(el.symbol, e.target.value)\n              }\n            />\n            <button\n              type=\"button\"\n              aria-label=\"add 1\"\n              onClick={() =>\n                props.onUpdateQuantity(el.symbol, el.buyQuantity + 1)\n              }\n            >\n              +\n            </button>\n            {/* <span>{stock.prices[stock.prices.length - 1] * stock.buyQuantity}</span> */}\n            <button type=\"submit\">Buy</button>\n          </form>\n        </div>\n      );\n    });\n  }\n\n  return <div>{displayStock}</div>;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    stocks: state.stocks.stocks,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchStocks: () => {\n      dispatch(actions.fetchStocks());\n    },\n    onUpdateQuantity: (symbol, value) => {\n      dispatch(actions.updateQuantity(symbol, value));\n    },\n    onBuyStock: (stock, quantity, index) => {\n      dispatch(actions.buyStock(stock, quantity, index));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Symbol);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport * as actions from \"../store/actions/index\";\n\nconst Transactions = (props) => {\n  useEffect(() => {\n    if (!props.stocks.length) {\n      props.onFetchStocks();\n    }\n    if (!props.isTransactionsLoaded) {\n      props.onFetchTransactions();\n    }\n  });\n\n  const displayTransactions = props.transactions.map((transaction) => {\n    const stock = props.stocks.filter((el) => {\n      return transaction.stock === el._id;\n    })[0];\n    return (\n      <tr key={transaction._id}>\n        <td>\n          <Link to={`/stocks/${stock.symbol}`}>{stock.symbol}</Link>\n        </td>\n        <td>{stock.companyName}</td>\n        <td>{new Date(transaction.date).toLocaleDateString()}</td>\n        <td>{transaction.quantity}</td>\n        <td>{transaction.price.toFixed(2)}</td>\n      </tr>\n    );\n  });\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <th>Symbol</th>\n            <th>Company</th>\n            <th>Date</th>\n            <th>Quantity</th>\n            <th>Price</th>\n          </tr>\n        </thead>\n        <tbody>{displayTransactions.reverse()}</tbody>\n      </table>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    stocks: state.stocks.stocks,\n    transactions: state.stocks.transactions,\n    isTransactionsLoaded: state.stocks.isTransactionsLoaded,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchStocks: () => {\n      dispatch(actions.fetchStocks());\n    },\n    onFetchTransactions: () => {\n      dispatch(actions.fetchTransactions());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Transactions);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport * as actions from \"../store/actions/index\";\n\nconst Owned = (props) => {\n  useEffect(() => {\n    if (!props.stocks.length) {\n      props.onFetchStocks();\n    } else {\n      // Reset buy quantity for all stocks\n      for (let stock of props.stocks) {\n        props.onUpdateQuantity(stock.symbol, 0);\n      }\n    }\n    if (!props.isTransactionsLoaded) {\n      props.onFetchTransactions();\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  const buyStock = (e) => {\n    e.preventDefault();\n    const symbol = e.target.getAttribute(\"data-symbol\");\n\n    // Find index of stock being bought\n    const index = props.stocks.findIndex((stock) => stock.symbol === symbol);\n\n    // Check if user can afford to buy the quantity entered\n    const price =\n      props.stocks[index].prices[props.stocks[index].prices.length - 1];\n    const quantity = props.stocks[index].buyQuantity;\n    const totalPrice = price * quantity;\n    console.log(totalPrice);\n    if (quantity !== 0 && totalPrice < props.cash) {\n      props.onBuyStock(props.stocks[index], quantity, index);\n      props.onUpdateQuantity(symbol, 0);\n    } else {\n      console.log(\"Can't Afford or quantity 0\");\n    }\n  };\n\n  const sellStock = (e) => {\n    e.preventDefault();\n    const symbol = e.target.getAttribute(\"data-symbol\");\n\n    // Find index of stock being bought\n    const index = props.stocks.findIndex((stock) => stock.symbol === symbol);\n\n    // Check that the user has the stock quantity to sell\n    const ownedQuantity = props.owned[symbol].quantity;\n    const quantity = props.stocks[index].sellQuantity;\n    if (quantity !== 0 && quantity <= ownedQuantity) {\n      props.onBuyStock(props.stocks[index], -quantity, index);\n      props.onUpdateQuantity(symbol, 0, \"sell\");\n    }\n  };\n\n  let totalValue = 0;\n  const displayOwned = [];\n  for (let key in props.owned) {\n    // Use stock from props.stocks to use buy quantity\n    const stock = props.stocks.filter((stock) => key === stock.symbol)[0];\n\n    // Percentage change since yesterday\n    const change =\n      ((stock.prices[stock.prices.length - 1] -\n        stock.prices[stock.prices.length - 2]) /\n        stock.prices[stock.prices.length - 2]) *\n      100;\n    displayOwned.push(\n      <tr key={key}>\n        <td>\n          <Link to={`/stocks/${key}`}>{key}</Link>\n        </td>\n        <td>{stock.companyName}</td>\n        <td>{stock.prices.length > 1 ? change.toFixed(2) + \"%\" : \"-\"}</td>\n        <td>{props.owned[key].quantity}</td>\n        <td>{stock.prices[stock.prices.length - 1].toFixed(2)}</td>\n        <td>\n          {(\n            stock.prices[stock.prices.length - 1] * props.owned[key].quantity\n          ).toFixed(2)}\n        </td>\n        <td>\n          <form onSubmit={buyStock} data-symbol={stock.symbol}>\n            <button\n              type=\"button\"\n              aria-label=\"subtract 1\"\n              onClick={() =>\n                props.onUpdateQuantity(stock.symbol, stock.buyQuantity - 1)\n              }\n            >\n              -\n            </button>\n            <input\n              type=\"number\"\n              id=\"quantity\"\n              name=\"quantity\"\n              aria-label=\"quantity\"\n              value={stock.buyQuantity}\n              min=\"0\"\n              onChange={(e) =>\n                props.onUpdateQuantity(stock.symbol, e.target.value)\n              }\n            />\n            <button\n              type=\"button\"\n              aria-label=\"add 1\"\n              onClick={() =>\n                props.onUpdateQuantity(stock.symbol, stock.buyQuantity + 1)\n              }\n            >\n              +\n            </button>\n            {/* <span>{stock.prices[stock.prices.length - 1] * stock.buyQuantity}</span> */}\n            <button type=\"submit\">Buy</button>\n          </form>\n        </td>\n        <td>\n          <form onSubmit={sellStock} data-symbol={stock.symbol}>\n            <button\n              type=\"button\"\n              aria-label=\"subtract 1\"\n              onClick={() =>\n                props.onUpdateQuantity(\n                  stock.symbol,\n                  stock.sellQuantity - 1,\n                  \"sell\",\n                  props.owned[key].quantity\n                )\n              }\n            >\n              -\n            </button>\n            <input\n              type=\"number\"\n              id=\"quantity\"\n              name=\"quantity\"\n              aria-label=\"quantity\"\n              value={stock.sellQuantity}\n              min=\"0\"\n              onChange={(e) =>\n                props.onUpdateQuantity(\n                  stock.symbol,\n                  e.target.value,\n                  \"sell\",\n                )\n              }\n              max={props.owned[key].quantity}\n            />\n            <button\n              type=\"button\"\n              aria-label=\"add 1\"\n              onClick={() =>\n                props.onUpdateQuantity(\n                  stock.symbol,\n                  stock.sellQuantity + 1,\n                  \"sell\",\n                  props.owned[key].quantity\n                )\n              }\n            >\n              +\n            </button>\n            {/* <span>{stock.prices[stock.prices.length - 1] * stock.buyQuantity}</span> */}\n            <button type=\"submit\">Sell</button>\n          </form>\n        </td>\n      </tr>\n    );\n\n    // Add to total value\n    totalValue +=\n      stock.prices[stock.prices.length - 1] * props.owned[key].quantity;\n  }\n\n  return (\n    <div>\n      <h1>Owned</h1>\n      <div>\n        <table>\n          <thead>\n            <tr>\n              <th>Symbol</th>\n              <th>Company</th>\n              <th>Change</th>\n              <th>Quantity</th>\n              <th>Price</th>\n              <th>Value</th>\n              <th>Buy</th>\n              <th>Sell</th>\n            </tr>\n            <tr></tr>\n          </thead>\n          <tbody>{displayOwned}</tbody>\n          <tfoot>\n            <tr>\n              <td></td>\n              <td></td>\n              <td></td>\n              <td></td>\n              <td>Cash: </td>\n              <td>{props.cash.toFixed(2)}</td>\n            </tr>\n            <tr>\n              <td></td>\n              <td></td>\n              <td></td>\n              <td></td>\n              <td>Total: </td>\n              <td>{(totalValue + props.cash).toFixed(2)}</td>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    stocks: state.stocks.stocks,\n    owned: state.stocks.owned,\n    isTransactionsLoaded: state.stocks.isTransactionsLoaded,\n    cash: state.auth.cash,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchStocks: () => {\n      dispatch(actions.fetchStocks());\n    },\n    onFetchTransactions: () => {\n      dispatch(actions.fetchTransactions());\n    },\n    onUpdateQuantity: (symbol, value, sell, max) => {\n      dispatch(actions.updateQuantity(symbol, value, sell, max));\n    },\n    onBuyStock: (stock, quantity, index) => {\n      dispatch(actions.buyStock(stock, quantity, index));\n    },\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Owned);\n","import \"./App.css\";\nimport React, { useEffect } from \"react\";\nimport { Switch, Route, Link, useHistory } from \"react-router-dom\";\nimport Register from \"./components/Register\";\nimport Login from \"./components/Login\";\nimport AuthRedirect from \"./components/AuthRedirect\";\nimport AuthShow from \"./components/AuthShow\";\nimport AuthHide from \"./components/AuthHide\";\nimport Home from \"./components/Home\";\nimport Search from \"./components/Search\";\nimport Stocks from \"./components/Stocks\";\nimport Symbol from \"./components/Symbol\";\nimport Transactions from \"./components/Transactions\";\nimport Owned from \"./components/Owned\";\n\nimport { connect } from \"react-redux\";\nimport * as actions from \"./store/actions/index\";\n\nconst App = (props) => {\n  let history = useHistory();\n\n  // Reset error message if changing pages\n  history.listen((location) => {\n    props.onSetErrorMessage(\"\")\n  })\n\n  // Check if user has a valid token in local storage\n  const isLoggedIn = () => {\n    const expiration = localStorage.getItem(\"jwtExpires\");\n    return expiration && Number(expiration) > Date.now();\n  };\n\n  // Authorize user if they have a valid token\n  useEffect(() => {\n    if (isLoggedIn()) {\n      props.onAuthorize();\n      props.onSetCash(localStorage.getItem(\"cash\"));\n    }\n    props.onLoadingFinish();\n    // eslint-disable-next-line\n  }, []);\n\n  const logout = () => {\n    localStorage.removeItem(\"jwtToken\");\n    localStorage.removeItem(\"jwtExpires\");\n    localStorage.removeItem(\"cash\");\n    history.push(\"/\");\n    props.onDeauthorize();\n  };\n\n  return (\n    <div className=\"App\">\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <AuthHide>\n            <li>\n              <Link to=\"/register\">Register</Link>\n            </li>\n          </AuthHide>\n          <AuthHide>\n            <li>\n              <Link to=\"/login\">Login</Link>\n            </li>\n          </AuthHide>\n          <AuthShow>\n            <li>\n              <Link to=\"/transactions\">Transactions</Link>\n            </li>\n          </AuthShow>\n          <AuthShow>\n            <li>\n              <Link to=\"/stocks\">Stocks</Link>\n            </li>\n          </AuthShow>\n          <AuthShow>\n            <li>\n              <Link to=\"/owned\">Owned</Link>\n            </li>\n          </AuthShow>\n          <AuthShow>\n            <li>\n              <Link to=\"/search\">Search</Link>\n            </li>\n          </AuthShow>\n          <AuthShow>\n            <li>\n              <button onClick={logout}>Log out</button>\n            </li>\n          </AuthShow>\n          <AuthShow>\n            <li>Cash: ${props.cash}</li>\n          </AuthShow>\n          <h2>{props.errorMessage}</h2>\n        </ul>\n      </nav>\n      <main>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n          <Route path=\"/register\">\n            <Register />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/search\">\n            <AuthRedirect>\n              <Search />\n            </AuthRedirect>\n          </Route>\n          <Route path=\"/transactions\">\n            <AuthRedirect>\n              <Transactions />\n            </AuthRedirect>\n          </Route>\n          <Route path=\"/stocks/:symbol\">\n            <AuthRedirect>\n              <Symbol />\n            </AuthRedirect>\n          </Route>\n          <Route path=\"/owned\">\n            <AuthRedirect>\n              <Owned />\n            </AuthRedirect>\n          </Route>\n          <Route path=\"/stocks\">\n            <AuthRedirect>\n              <Stocks />\n            </AuthRedirect>\n          </Route>\n        </Switch>\n      </main>\n      <footer>\n        <a href=\"https://iexcloud.io\">Data provided by IEX Cloud</a>\n      </footer>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.auth.isAuth,\n    cash: state.auth.cash,\n    errorMessage: state.auth.errorMessage,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuthorize: () => {\n      dispatch(actions.authorize());\n    },\n    onDeauthorize: () => {\n      dispatch(actions.deauthorize());\n    },\n    onLoadingFinish: () => {\n      dispatch(actions.loadingFinish());\n    },\n    onSetCash: (cash) => {\n      dispatch(actions.setCash(cash));\n    },\n    onSetErrorMessage: (message) => {\n      dispatch(actions.setErrorMessage(message))\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  isAuth: false,\n  isLoading: true,\n  errorMessage: \"\",\n};\n\nconst authorize = (state, action) => {\n  return {\n    ...state,\n    isAuth: true,\n  };\n};\n\nconst deauthorize = (state, action) => {\n  return {\n    ...state,\n    isAuth: false,\n  };\n};\n\nconst loadingFinish = (state, action) => {\n  return {\n    ...state,\n    isLoading: false,\n  }\n}\n\nconst setCash = (state, action) => {\n  return {\n    ...state,\n    cash: Number(action.cash)\n  }\n}\n\nconst setErrorMessage = (state, action) => {\n  return {\n    ...state,\n    errorMessage: action.message\n  }\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTHORIZE:\n      return authorize(state, action);\n    case actionTypes.DEAUTHORIZE:\n      return deauthorize(state, action);\n    case actionTypes.LOADING_FINISH:\n      return loadingFinish(state,action);\n    case actionTypes.SET_CASH:\n      return setCash(state, action)\n    case actionTypes.SET_ERROR_MESSAGE:\n      return setErrorMessage(state, action)\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  stocks: [],\n  transactions: [],\n  isTransactionsLoaded: false,\n  owned: {},\n};\n\nconst loadStocks = (state, action) => {\n  const stocks = action.stocks;\n  for (let stock of stocks) {\n    stock.buyQuantity = 0;\n    stock.sellQuantity = 0;\n  }\n  return {\n    ...state,\n    stocks: stocks,\n  };\n};\n\n// Add to quantity to buy from user input\nconst updateQuantity = (state, action) => {\n  const stocksCopy = [];\n  for (let stock of state.stocks) {\n    stocksCopy.push({\n      ...stock,\n      prices: [...stock.prices],\n    });\n  }\n\n  // Find index of stock being bought\n  const index = stocksCopy.findIndex((stock) => stock.symbol === action.symbol);\n\n  // Change sell quantity if action was to sell\n  if (action.sell === \"sell\") {\n    stocksCopy[index].sellQuantity = Number(action.value);\n\n    // Do nothing if the value will become negative\n    if (stocksCopy[index].sellQuantity < 0) {\n      stocksCopy[index].sellQuantity = 0;\n    }\n    // If value is greater than the max leave it\n    if (stocksCopy[index].sellQuantity > action.max) {\n      stocksCopy[index].sellQuantity = state.stocks[index].sellQuantity;\n    }\n  } else {\n    stocksCopy[index].buyQuantity = Number(action.value);\n\n    // Do nothing if the value will become negative\n    if (stocksCopy[index].buyQuantity < 0) {\n      stocksCopy[index].buyQuantity = 0;\n    }\n\n    // If value is greater than the max leave it\n    if (stocksCopy[index].sellQuantity > action.max) {\n      stocksCopy[index].sellQuantity = state.stocks[index].sellQuantity;\n    }\n  }\n\n  return {\n    ...state,\n    stocks: stocksCopy,\n  };\n};\n\n// Create inventory of users stocks by summing users transactions\nconst createOwned = (state, transactions) => {\n  const owned = {};\n  for (let transaction of transactions) {\n    const stock = state.stocks.filter((el) => {\n      return transaction.stock === el._id;\n    })[0];\n\n    // If not entry for stock create new\n    if (!owned[stock.symbol]) {\n      owned[stock.symbol] = {};\n      owned[stock.symbol].companyName = stock.companyName;\n      owned[stock.symbol].prices = stock.prices;\n    }\n\n    // Get current quantity or set to 0 if not defined\n    const currentQuantity = owned[stock.symbol].quantity;\n    if (!currentQuantity) {\n      owned[stock.symbol].quantity = 0;\n    }\n    owned[stock.symbol].quantity =\n      owned[stock.symbol].quantity + transaction.quantity;\n  }\n\n  // Delete from owned if quantity is 0\n  for (let key in owned) {\n    if (owned[key].quantity === 0) {\n      delete owned[key];\n    }\n  }\n  return owned;\n};\n\nconst loadTransactions = (state, action) => {\n  const transactions = action.transactions;\n  const owned = createOwned(state, transactions);\n  return {\n    ...state,\n    isTransactionsLoaded: true,\n    transactions,\n    owned,\n  };\n};\n\nconst newTransaction = (state, action) => {\n  const transactions = [...state.transactions, action.transaction];\n  const owned = createOwned(state, transactions);\n  return {\n    ...state,\n    transactions,\n    owned,\n  };\n};\n\nconst addStock = (state, action) => {\n  return {\n    ...state,\n    stocks: [...state.stocks, action.stock],\n  };\n};\n\n// Add id to last added stock if not included\nconst addNewId = (state, action) => {\n  const stocksCopy = [];\n  for (let stock of state.stocks) {\n    stocksCopy.push({\n      ...stock,\n      prices: [...stock.prices],\n    });\n  }\n\n  if (!stocksCopy[stocksCopy.length - 1]._id) {\n    stocksCopy[stocksCopy.length - 1]._id = action._id;\n  }\n\n  return {\n    ...state,\n    stocks: stocksCopy,\n  };\n};\n\nconst stocksReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.LOAD_STOCKS:\n      return loadStocks(state, action);\n    case actionTypes.UPDATE_QUANTITY:\n      return updateQuantity(state, action);\n    case actionTypes.LOAD_TRANSACTIONS:\n      return loadTransactions(state, action);\n    case actionTypes.NEW_TRANSACTION:\n      return newTransaction(state, action);\n    case actionTypes.ADD_STOCK:\n      return addStock(state, action);\n    case actionTypes.ADD_NEW_ID:\n      return addNewId(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default stocksReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\nimport auth from \"./store/reducers/auth\";\nimport stocks from \"./store/reducers/stocks\"\nimport thunk from \"redux-thunk\";\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  auth: auth,\n  stocks: stocks,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}